// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"] //postgres allows for fullTextSearch to search for jobs
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum JobStatus {
  APPROVED
  PENDING
  DECLINED
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id           Int      @id @default(autoincrement())
  clerkId      Int?      @unique
  email        String?  @unique
  firstName    String?
  lastName     String?
  profileImage String?
  userRole     UserRole @default(USER)

  jobs Job[]
}

model Job {
  id               Int       @id @default(autoincrement())
  userId           Int?
  slug             String    @unique
  title            String
  type             String
  locationType     String
  location         String?
  description      String?
  salary           Int
  companyName      String
  applicationEmail String?
  applicationUrl   String?
  companyLogoUrl   String?
  status           JobStatus @default(PENDING)
  approved         Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("jobs") // gives the table name in db a name of "jobs". Different from the model name
}
